
/*
    Nama:
    Frankie
    Agnes
    Nodas
    Afi
 */
#include <windows.h>
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif

#include <math.h>
#include <stdlib.h>

const double PI = 3.14;

void init(void);
void tampil(void);
void keyboard(unsigned char,int,int);
void ukuran(int,int);
void mouseMotion(int x, int y);
void mouse(int button, int state, int x, int y);
void cylinder(float radius,float jumlah_titik,float x_tengah,float z_tengah,float alas,float tutupatas,float tinggi,float triangle_tinggi);
void setengahlingkaran(float radius, float jumlah_titik, float y_tengah, float z_tengah, float alas, float tutupatas, float tinggi);void setengahlingkaran(float radius, float jumlah_titik, float y_tengah, float z_tengah, float alas, float tutupatas, float tinggi);void setengahlingkaran(float radius, float jumlah_titik, float y_tengah, float z_tengah, float alas, float tutupatas, float tinggi);
void setengahlingkaran1(float radius, float jumlah_titik, float y_tengah, float z_tengah, float alas, float tutupatas, float tinggi);void setengahlingkaran(float radius, float jumlah_titik, float y_tengah, float z_tengah, float alas, float tutupatas, float tinggi);void setengahlingkaran(float radius, float jumlah_titik, float y_tengah, float z_tengah, float alas, float tutupatas, float tinggi);

float xrot = 0.0f;
float yrot = 0.0f;
float zrot = 0.0f;
float xx= 0.0;
float yy = 0.0;
float zz = 0.0;
float xdiff = 0.0f;
float ydiff = 0.0f;
bool mousDown = false;
int is_depth;


int main(int argc,char**argv)
{

    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_DOUBLE|GLUT_RGB);
    glutInitWindowSize(800,600);
    glutInitWindowPosition(250,80);
    glutCreateWindow("672019049, 672019061, 672019165, 672019347");
    init();

    glutDisplayFunc(tampil);
    glutKeyboardFunc(keyboard);
    glutReshapeFunc(ukuran);
    glutMouseFunc(mouse);
    glutMotionFunc(mouseMotion);

    glutIdleFunc(tampil);
    glutMainLoop();
    return 0;
}

void init(void)
{

    glClearColor(0.0,0.0,0.0,0.0);
    glMatrixMode(GL_PROJECTION);

    glEnable(GL_DEPTH_TEST);
    is_depth = 1;
    glMatrixMode(GL_MODELVIEW);
    glPointSize(9.0);
    glLineWidth(6.0f);

}

void tampil(void)
{

    if(is_depth)
        glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);

    else
    glClear(GL_COLOR_BUFFER_BIT);

        glLoadIdentity();
        gluLookAt(0.0f,0.0f,3.0f,0.0f,0.0f,0.0f,0.0f,1.0f,0.0f);
        glRotatef(xrot,1.0f,0.0f,0.0f);
        glRotatef(yrot,0.0f,1.0f,0.0f);
        glRotatef(zrot,0.0f,0.0f,1.0f);
        glTranslatef(xx,yy,zz);


        //bawahAlas

        glColor3f(1,1,1);
        glBegin(GL_POLYGON);
            glVertex3f(-80,-15,20);
            glVertex3f(80,-15,20);
            glVertex3f(80,-15,-80);
            glVertex3f(-80,-15,-80);
        glEnd();

        //lingkaran besar
        cylinder(8,100,-20,-28,-15,0,-15,0);

        //lingkaran2
        cylinder(5,100,-3,-15,-15,0,-15,0);


        cylinder(5,100,21,-10,-15,0,-15,0);

        //lingkaran pojok
        cylinder(6,100,39,-10,-15,-4,-15,-4);

 glBegin(GL_QUADS);
        glColor3f(1.0,0.0,0.0);
        glVertex3f(-5,0,-12);
         glVertex3f(-5,-15,-12);
          glVertex3f(-25,-15,-23);
           glVertex3f(-25,0,-23);
           glEnd();

             glBegin(GL_QUADS);
        glColor3f(1.0,0.0,0.0);
        glVertex3f(20,0,-8);
         glVertex3f(20,-15,-8);
          glVertex3f(0,-15,-12);
           glVertex3f(0,0,-12);
           glEnd();

              glBegin(GL_QUADS);
        glColor3f(1.0,0.0,0.0);
        glVertex3f(34,-4,-13);
         glVertex3f(34,-15,-13);
          glVertex3f(25,-15,-12);
           glVertex3f(25,-4,-12);
           glEnd();

                 glBegin(GL_QUADS);
        glColor3f(1.0,0.0,0.0);
        glVertex3f(45,-5,-70);
         glVertex3f(45,-15,-70);
          glVertex3f(44,-15,-12);
           glVertex3f(44,-5,-12);
           glEnd();


                 glBegin(GL_QUADS);
        glColor3f(1.0,0.0,0.0);
        glVertex3f(45,-5,-70);
         glVertex3f(45,-15,-70);
          glVertex3f(-20,-15,-70);
           glVertex3f(-20,-5,-70);

       glPushMatrix();
       glPopMatrix();
       glutSwapBuffers();
}

void keyboard(unsigned char key,int x,int y)
{

     switch(key)
    {
    case 'w':
    case 'W':
        zz += 3.0;

        break;
    case 'd':
    case 'D':
        xx +=3.0;
        break;
    case 's':
    case 'S':
        zz +=-3.0;
        break;

    case 'a':
    case 'A':
        xx+=-3.0;
        break;
    case '7':
           yy+=3.0;
        break;
    case '9':
          yy+=-3.0;
        break;
    case '2':
           xrot+=2.0;
        break;
    case '8':
             xrot+=-2.0;
        break;
    case '6':
           yrot+=2.0;
        break;
    case '4':
             yrot+=-2.0;
        break;

    case '1':
            zrot +=2.0;
        break;
    case '3':
             zrot +=-2.0;
        break;
    case '5':
        if(is_depth)
        {
            is_depth =0;
            glDisable(GL_DEPTH_TEST);
        } else{
            is_depth=1;
            glEnable(GL_DEPTH_TEST);

        }

    }

    tampil();

}
void idle(){

    if(!mousDown){

        xrot += 0.3f;
        yrot += 0.4f;
    }

    glutPostRedisplay();

}

void mouse(int button, int state, int x, int y){

    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN){

        mousDown = true;
        xdiff = x - yrot;
        ydiff = -y + xrot;

    }
    else{
        mousDown = false;
    }

}

void mouseMotion(int x, int y){

    if(mousDown){
        yrot = x - xdiff;
        xrot = y + ydiff;

        glutPostRedisplay();
    }

}

void cylinder(float radius,float jumlah_titik,float x_tengah,float z_tengah,float alas,float tutupatas,float tinggi,float triangle_tinggi){

    glColor3f(1,0,0);
    glBegin(GL_TRIANGLE_STRIP);
    for(int a = 0; a <= 180; a++){
        float sudut = a * (2 * PI/jumlah_titik);
        float x = x_tengah + radius * cos(sudut);
        float z = z_tengah + radius * sin(sudut);
        glVertex3f(x, tinggi, z);
        glVertex3f(x,triangle_tinggi,z);
    }
    glEnd();

    glColor3f(0,1,0);
    glBegin(GL_POLYGON);
        for(int a = triangle_tinggi; a <= 180; a++){
        float sudut = a * (2 * PI/jumlah_titik);
        float x = x_tengah + radius * cos(sudut);
        float z = z_tengah + radius * sin(sudut);
        glVertex3f(x, tutupatas, z);
    }
    glEnd();

    glColor3f(0,1,0);
    glBegin(GL_POLYGON);
        for(int a = triangle_tinggi; a <= 180; a++){
        float sudut = a * (2 * PI/jumlah_titik);
        float x = x_tengah + radius * cos(sudut);
        float z = z_tengah + radius * sin(sudut);
        glVertex3f(x,alas, z);
    }
    glEnd();
}

void setengahlingkaran(float radius, float jumlah_titik, float y_tengah, float z_tengah, float alas, float tutupatas, float tinggi){

    glColor3f(1,0,0);
    glBegin(GL_TRIANGLE_STRIP);
    for(int a = 0; a <= 180; a++){
        float sudut = a * (2 * PI/jumlah_titik);
        float y = y_tengah + radius * cos(sudut);
        float z = z_tengah + radius * sin(sudut);
        glVertex3f(tinggi, y, z);
        glVertex3f(0,y,z);
    }
    glEnd();

    glColor3f(0,1,0);
    glBegin(GL_POLYGON);
        for(int a = 0; a <= 180; a++){
        float sudut = a * (2 * PI/jumlah_titik);
        float y = y_tengah + radius * cos(sudut);
        float z = z_tengah + radius * sin(sudut);
        glVertex3f(tutupatas, y, z);
    }
    glEnd();

    glColor3f(0,1,0);
    glBegin(GL_POLYGON);
        for(int a = 0; a <= 180; a++){
        float sudut = a * (2 * PI/jumlah_titik);
        float y = y_tengah + radius * cos(sudut);
        float z = z_tengah + radius * sin(sudut);
        glVertex3f(alas, y, z);
    }
    glEnd();
}


void setengahlingkaran1(float radius, float jumlah_titik, float x_tengah, float y_tengah, float alas, float tutupatas, float tinggi){

    glColor3f(1,0,0);
    glBegin(GL_TRIANGLE_STRIP);
    for(int a = 0; a <= 180; a++){
        float sudut = a * (2 * PI/jumlah_titik);
        float x = x_tengah + radius * cos(sudut);
        float y = y_tengah + radius * sin(sudut);
        glVertex3f(x, y, tinggi);
        glVertex3f(x,y,0);
    }
    glEnd();

    glColor3f(0,1,0);
    glBegin(GL_POLYGON);
        for(int a = 0; a <= 180; a++){
        float sudut = a * (2 * PI/jumlah_titik);
        float x = x_tengah + radius * cos(sudut);
        float y = y_tengah + radius * sin(sudut);
        glVertex3f(x, y, tutupatas);
    }
    glEnd();

    glColor3f(0,1,0);
    glBegin(GL_POLYGON);
        for(int a = 0; a <= 180; a++){
        float sudut = a * (2 * PI/jumlah_titik);
        float x = x_tengah + radius * cos(sudut);
        float y = y_tengah + radius * sin(sudut);
        glVertex3f(x, y, alas);
    }
    glEnd();
}




void ukuran(int lebar,int tinggi)
{

    if(tinggi == 0) tinggi =1;
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(20.0,lebar/tinggi,5.0,700.0);
    glTranslatef(0.0,-5.0,-300.0);
    glMatrixMode(GL_MODELVIEW);
}

